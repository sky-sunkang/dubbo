<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/task  
http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- 引入其他配置，如定时的配置 -->
	<!-- <import resource="applicationContext-quartz.xml" /> -->

	<!-- 开启定时任务注解 -->
	<task:annotation-driven />

	<!-- 自动扫描web包 ,将带有注解的类 纳入spring容器管理 ，controller的注解不扫描 -->
	<context:component-scan base-package="com.sunkang">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 使用阿里巴巴的Druid连接池 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 连接的基本配置 -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 连接池的参数 -->
		<property name="initialSize" value="5" />  <!-- 初始化连接条数 -->
		<property name="maxActive" value="100" /> <!-- 最大条数 -->
		<property name="minIdle" value="30" />  <!-- 最小条数 -->
		<property name="maxWait" value="1000" />  <!-- 最大等待时间 -->
		<property name="poolPreparedStatements" value="true" />  <!-- 缓存游标 -->
		<property name="defaultAutoCommit" value="false" /> <!-- 提交方式 -->
		  <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
	</bean>

	<!-- spring和mybatis融合 -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/sunkang/mapping/*.xml" />
		<property name="configLocation" value="classpath:mybatis-configuration.xml" />
	</bean>

	<!-- DAO(mapper)接口所在包名，Spring会自动查找其下的类 -->
	<bean id="dao" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sunkang.dao*"></property>
		<property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"></property>
	</bean>

	<!-- 配置aop事务 -->
	<bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" /> 
    </bean>   
    
    <!-- 配置事务特性 -->
	<tx:advice id="txAdvice" 
			transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" 
					propagation="NOT_SUPPORTED"
					isolation="READ_COMMITTED"
					read-only="true"
			/>
			<tx:method name="select*" 
					propagation="NOT_SUPPORTED"
					isolation="READ_COMMITTED"
					read-only="true"
			/>
			<tx:method name="get*" 
					propagation="NOT_SUPPORTED"
					isolation="READ_COMMITTED"
					read-only="true"
			/>
			
			<tx:method name="*"
					propagation="REQUIRED"
					isolation="READ_COMMITTED"
			/>
		</tx:attributes>
	</tx:advice>
	  <aop:config>
	     <!--把事务控制在Service层-->
	     <aop:pointcut id="pc" expression="execution(* com.sunkang.service..*.*(..))"/>
	     <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	  </aop:config>
	  
	  <import resource="dubbo-provider.xml" />
</beans> 